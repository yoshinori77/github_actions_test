name: CI/CD Workflow

on: [push]

env:
  WORKON_HOME: ~/.venvs/
  REPOSITORY_NAME: ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}

jobs:
  build:
    name: ビルド
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10.5'
        cache: 'pipenv'
        cache-dependency-path: |
          Pipfile.lock
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.venvs/${{ env.REPOSITORY_NAME }}-*
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    - name: Install dependencies
      run: |
        pip install pipenv
        pipenv sync --dev

  security-check:
    name: セキュリティチェック
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10.5'
        cache: 'pipenv'
        cache-dependency-path: |
          Pipfile.lock
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.venvs/${{ env.REPOSITORY_NAME }}-*
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 30
    - name: Install pipenv
      run: |
        pip install pipenv
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master # For node projects, change accordingly
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: monitor
